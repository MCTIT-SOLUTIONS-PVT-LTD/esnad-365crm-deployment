name: Deploy D365 Unmanaged Solution (On-Prem)

on:
  push:
    branches:
      - dev
    paths:
      - 'Solutions/**'   # Trigger only if solution zip is pushed
  workflow_dispatch:
    inputs:
      solution:
        description: "Unmanaged solution ZIP path (relative to repo root)"
        required: true
        default: "Solutions/EsnadCICD_1_0_0_0.zip"

jobs:
  deploy-d365-dev:
    runs-on: self-hosted

    steps:
      - name: ‚úÖ GitHub Actions workflow started
        run: echo "GitHub Actions workflow triggered successfully"

      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v3

      - name: üìÅ List Solution Files
        shell: pwsh
        run: |
          Write-Host "`nüîç Listing contents of Solutions folder:"
          Get-ChildItem "${{ github.workspace }}/Solutions" | ForEach-Object { Write-Host $_.FullName }

      - name: üõ† Import Unmanaged Solution to D365 On-Prem
        shell: pwsh
        run: |
          Write-Host "`nüì¶ Preparing solution import variables"

          # Handle path from input or default
          $solutionInput = "${{ github.event.inputs.solution }}"
          if ([string]::IsNullOrWhiteSpace($solutionInput)) {
            $solutionInput = "Solutions/EsnadCICD_1_0_0_0.zip"
          }

          $solutionPath = Join-Path "${{ github.workspace }}" $solutionInput
          Write-Host "`nüìÅ Full solution path: $solutionPath"

          # CRM connection variables
          $crmUrl = "${{ vars.D365DEV_ENV_URL }}"
          $username = "${{ vars.D365DEV_USERNAME }}"
          $password = "${{ vars.D365DEV_PASSWORD }}"

          # Connection String
          Write-Host "`nüîë Building connection string"
          $connectionString = @"AuthType=IFD;Url=$crmUrl;Domain=crm-esnad.com;Username=$username;Password=$password;HomeRealmUri=https://sts1.crm-esnad.com/adfs/services/trust/13/usernamemixed;RequireNewInstance=true;"@

          Write-Host "`nüîÅ Importing solution: $solutionPath"
          Write-Host "üîí Connecting to CRM: $crmUrl"

          try {
            Import-CrmSolution -ConnectionString $connectionString -SolutionFilePath $solutionPath -PublishWorkflows:$true -Verbose
            Write-Host "‚úÖ Solution import completed successfully"
          } catch {
            Write-Error "‚ùå Solution import failed: $_"
            exit 1
          }
